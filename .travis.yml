language: python
python: '2.7'

env:
  global:
    - exit_code=0
    - number_per_job=1
    - message=()
    - ANSIBLE_CONFIG=/home/travis/.ansible/ansible.cfg
    - ANSIBLE_VERSION=latest
  matrix:
    - id=1

before_install:
  - sudo apt-get update -qq
  - mkdir /home/travis/.azure
  - touch /home/travis/.azure/credentials
  - printf "[default]\nsubscription_id=$subscriptionId\nclient_id=$clientId\nsecret=$secret\ntenant=$tenant\n" > /home/travis/.azure/credentials
  - echo "-echo---[default]\nsubscription_id=$subscriptionId\nclient_id=$clientId\nsecret=$secret\ntenant=$tenant\n--echo-"
  - cat  /home/travis/.azure/credentials
  - run_test(){
      file=$1;
      test_name=${file##./};
      test_name=${test_name%%.yml};
      delete_resource_group=${2:-true};
      resource_group=${3:-sampletest$(date +%s)};
      echo Run playbook $file;
      travis_wait 50 ansible-playbook $file -vvv ;
      if [ $? -ne 0 ]; then
        echo test $file failed;
        message+=($file);
        export exit_code=1;
      fi;

      if [ "$delete_resource_group" == true ]; then
        travis_wait 50 ansible-playbook ./__helpers/__delete_test_resource_group.yml --extra-vars "{\"azure_subscription_id\":$AZURE_SUBSCRIPTION_ID,\"azure_tenant\":$AZURE_TENANT,\"azure_client_id\":$AZURE_CLIENT_ID,\"resource_group_name\":$resource_group}";
      fi;
    }


  - scan_test() {
      end=$((id * number_per_job));
      start=$((end - number_per_job));

      branch=$TRAVIS_BRANCH;
      echo branch is $branch;

      run_test playbook.yml;	

    }

install:

install:
  - sudo apt-get install -y git
  - curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
  - sudo add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable"
  - sudo apt-get update
  - apt-cache policy docker-ce
  - sudo apt-get install -y docker-ce
  - sudo usermod -aG docker ${USER}
  - sudo apt-get install -y default-jdk
  - sudo apt-get install -y maven sshpass

  - if [ "$ANSIBLE_VERSION" = "latest" ]; then pip install ansible[azure]; else pip
    install ansible[azure]==$ANSIBLE_VERSION; fi
  - ansible --version
  - ansible-galaxy install Azure.azure_preview_modules
  - pip install -I -r ~/.ansible/roles/Azure.azure_preview_modules/files/requirements-azure.txt
  - pip install azure_mgmt_privatedns 
  - pip install azure_cli_privatedns
  - pip install docker
  - pip freeze
  - cp -f ./ansible.cfg /home/travis/.ansible
  - cp -f ./invertory.cfg /home/travis/.ansible

  - git clone https://github.com/Magopancione/docker-swarm.git 
  - git checkout $TRAVIS_BRANCH

script:
  - scan_test
  - exit $exit_code

notifications:
  email:
    - sonoilmagopancione@gmail.com
